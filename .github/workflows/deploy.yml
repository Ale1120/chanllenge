name: Desplegar a AWS ECS

on:
  push:
    branches:
      - Testing
      - Develop
env:
  AWS_REGION: us-east-2                 
  ECR_REPOSITORY: docker-devops         
  ECS_SERVICE: Web-Service                
  ECS_CLUSTER: devops               
  ECS_TASK_DEFINITION: ./AWS_ECS/Web-Devops-ECS.json 
  CONTAINER_NAME: Devpps         

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_NAME: ${{ github.ref_name }}
      run: |
        sed -i 's/Produccion/'"${{ github.ref_name }}"'/ ' Dockerfile
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:Web-$IMAGE_NAME-$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:Web-$IMAGE_NAME-$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:Web-$IMAGE_NAME-$IMAGE_TAG" >> $GITHUB_OUTPUT
    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}    
    
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true        